// Generated using `moon info`, DON'T EDIT IT
package "tonyfettes/pcre2"

import(
  "moonbitlang/core/string"
)

// Values
fn compile(String) -> Code raise Pcre2Error

// Errors
pub suberror Pcre2Error {
  LookaroundBSK
  Unicode(UnicodeError)
  Compile(String, Int, UInt64)
  Code(Int)
}
impl Show for Pcre2Error

pub suberror UnicodeError {
  InvalidCodeUnitOffset(Int)
  InvalidSurrogatePair
}
impl Show for UnicodeError

// Types and methods
type Code
fn Code::matches(Self, String) -> Matches raise Pcre2Error
fn Code::substitute(Self, String, String) -> String

type Match
fn Match::groups(Self) -> Iter2[Int, @string.View]
fn Match::named_groups(Self) -> Iter2[String, @string.View]
fn[Index : MatchIndex] Match::op_get(Self, Index) -> @string.View

type Matches
fn Matches::next(Self) -> Match? raise Pcre2Error

pub enum Pcre2Newline {
  CR
  LF
  CRLF
  Any
  AnyCRLF
  Nul
}

// Type aliases

// Traits
trait MatchIndex
impl MatchIndex for Int
impl MatchIndex for String

