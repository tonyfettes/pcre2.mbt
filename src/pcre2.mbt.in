///|
extern type Pcre2Code

///|
extern type Pcre2CompileContext

///|
extern type Pcre2GeneralContext

///|
extern type Pcre2MatchData

///|
extern type Pcre2MatchContext

///|
typealias Pcre2Size = UInt64

///|
pub extern "c" fn pcre2_get_error_message(
  errorcode : Int,
  buffer : String,
  bufflen : Pcre2Size
) -> Int = "pcre2_get_error_message"

///|
pub extern "c" fn pcre2_code_free(code : Pcre2Code) = "pcre2_code_free"

///|
pub extern "c" fn pcre2_compile(
  pattern : String,
  length : Int,
  options : UInt,
  errorcode : FixedArray[Int],
  erroroffset : FixedArray[Pcre2Size],
  context : @c.Nullable[Pcre2CompileContext]
) -> Pcre2Code = "pcre2_compile"

///|
pub extern "c" fn pcre2_match_data_create_from_pattern(
  code : Pcre2Code,
  context : @c.Nullable[Pcre2GeneralContext]
) -> Pcre2MatchData = "pcre2_match_data_create_from_pattern"

///|
pub extern "c" fn pcre2_match_data_free(match_data : Pcre2MatchData) = "pcre2_match_data_free"

///|
pub extern "c" fn pcre2_get_ovector_pointer(
  match_data : Pcre2MatchData
) -> @c.Pointer[Pcre2Size] = "pcre2_get_ovector_pointer"

///|
pub extern "c" fn pcre2_substitute(
  code : Pcre2Code,
  subject : String,
  length : Pcre2Size,
  start_offset : Int,
  options : UInt,
  match_data : Pcre2MatchData,
  mcontext : @c.Nullable[Pcre2MatchContext],
  replacement : String,
  rlength : Pcre2Size,
  outputbuffer : String,
  outlengthptr : FixedArray[Pcre2Size]
) -> Int = "pcre2_substitute"

///|
pub extern "c" fn pcre2_get_startchar(match_data : Pcre2MatchData) -> Pcre2Size = "pcre2_get_startchar"

///|
pub extern "c" fn pcre2_match(
  code : Pcre2Code,
  subject : String,
  length : Pcre2Size,
  start_offset : Pcre2Size,
  options : UInt,
  match_data : Pcre2MatchData,
  context : @c.Nullable[Pcre2MatchContext]
) -> Int = "pcre2_match"

///|
pub extern "c" fn pcre2_pattern_info(
  code : Pcre2Code,
  what : UInt,
  where_ : @c.Pointer[Unit]
) -> Int = "pcre2_pattern_info"
